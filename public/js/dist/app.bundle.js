(()=>{"use strict";function e(e,a){for(var t=0;t<a.length;t++){var i=a[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function a(e,t,i){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,a),this.name=e,this.username="",this.x=t,this.y=i,this.onFight=!1,this.startPosition=[],this.previousPosition,this.previousMouvement=[],this.previousWeapon,this.health=100,this.defense=!1,this.weapon={weapon:"",damage:"",name:""}}var t,i;return t=a,(i=[{key:"newTurn",value:function(){this.previousPosition=null,this.previousMouvement=[],this.startPosition=[this.y,this.x]}},{key:"removeLightUpTheWay",value:function(){$(".case__can_go").removeClass("case__can_go")}},{key:"updateWeaponPlayerInfo",value:function(){var e=$("#"+this.name+"-weapon-img"),a=$("#"+this.name+"-weapon-value");$("#"+e.attr("id")).removeClass("player-infos__"+this.previousWeapon).addClass("player-infos__"+this.weapon.weapon),$("#"+a.attr("id")).text(this.weapon.name)}},{key:"updateHealthPlayerInfo",value:function(e){var a=$("#"+e.name+"-health-value");$.ajax({success:function(){$("#"+a.attr("id")).text(e.health+"%")}})}},{key:"updatShieldPlayerInfo",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.name,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defense,t=$("#"+e+"-shield");a?$("#"+t.attr("id")).removeClass("player-infos__shield--hidden").addClass("player-infos__shield--visible"):$("#"+t.attr("id")).removeClass("player-infos__shield--visible").addClass("player-infos__shield--hidden")}},{key:"updateSectionColorPlayer",value:function(e){$("#"+e).removeClass("player-infos--active"),$("#"+this.name).addClass("player-infos--active")}},{key:"lightUpTheWay",value:function(e){for(var a in e)$("#case-"+e[a]).addClass("case__can_go")}},{key:"rotatePlayer",value:function(e){var a;switch(e){case"ArrowUp":a="rotate--up";break;case"ArrowDown":a="rotate--down";break;case"ArrowLeft":a="rotate--left";break;case"ArrowRight":a="rotate--right";break;default:a="rotate--up"}return a}},{key:"showWaysToGo",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;switch($(".case__can_go").removeClass("case__can_go"),a){case"ArrowUp":this.lightUpTheWay(e.up);break;case"ArrowDown":this.lightUpTheWay(e.down);break;case"ArrowLeft":this.lightUpTheWay(e.left);break;case"ArrowRight":this.lightUpTheWay(e.right);break;default:this.lightUpTheWay(e.up),this.lightUpTheWay(e.down),this.lightUpTheWay(e.left),this.lightUpTheWay(e.right)}}},{key:"updatePlayerPosition",value:function(e,a){var t=this,i=e[0][0]+""+e[0][1],s=e[1][0]+""+e[1][1],n=this.rotatePlayer(a);$.ajax({success:function(){$("#case-"+s).addClass("case__"+t.name),$("#case-"+s).addClass(n),$("#case-"+i).removeClass("case__"+t.name),$("#case-"+i).removeClass("rotate--up rotate--down rotate--left rotate--right")}})}}])&&e(t.prototype,i),a}(),t=function e(a,t,i){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e),this.weapon=a,this.damage=t,this.nameWeapon=i};function i(e,a){for(var t=0;t<a.length;t++){var i=a[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var s=function(){function e(){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e)}var a,t;return a=e,(t=[{key:"toAttack",value:function(e,a){if(e.health>0)return!0===e.defense&&(a-=50*a/100,e.defense=!1,e.updatShieldPlayerInfo(e.name,e.defense)),e.health=e.health-a,e.updateHealthPlayerInfo(e),e.updateSectionColorPlayer(e.name),!(e.health<=0)}},{key:"toBlockTheAttack",value:function(e){e.defense=!0,e.updatShieldPlayerInfo()}},{key:"hideTurnButton",value:function(){$("#turn").removeClass("btn-turn--active").addClass("btn-turn--hidden")}},{key:"showAttackButton",value:function(){$("#attack").removeClass("btn-attack--hidden").addClass("btn-attack--active")}},{key:"showShieldButton",value:function(){$("#to-defend").removeClass("btn-defend--hidden").addClass("btn-defend--active")}}])&&i(a.prototype,t),e}();function n(e){if(-1!==Math.floor(Math.random()*e))return Math.floor(Math.random()*e)}function r(e,a){for(var t=0;t<a.length;t++){var i=a[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var o=function(){function e(a,t,i,s,n,r){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=a,this.y=t,this.obstacles=i,this.weapons=s,this.generatedMap=[],this.activePlayer=n,this.players=r,this.onFight=!1}var a,t;return a=e,(t=[{key:"createMatrix",value:function(){for(var e=0;e<this.y;e++){this.generatedMap[e]=[];for(var a=0;a<this.x;a++)this.generatedMap[e][a]=0}}},{key:"positionPlayer",value:function(){for(var e=0;e<this.players.length;e++)for(var a=!1;0==a;){var t=n(this.generatedMap.length),i=n(this.generatedMap.length);if(0==this.generatedMap[i][t]){var s="ob",r="ob",o="ob",h="ob";if(i-1>=0){if(this.generatedMap[i-1][t]==this.players[0].name||this.generatedMap[i-1][t]==this.players[1].name)continue;s=this.generatedMap[i-1][t]}if(i+1<this.y){if(this.generatedMap[i+1][t]==this.players[0].name||this.generatedMap[i+1][t]==this.players[1].name)continue;r=this.generatedMap[i+1][t]}if(t-1>=0){if(this.generatedMap[i][t-1]==this.players[0].name||this.generatedMap[i][t-1]==this.players[1].name)continue;o=this.generatedMap[i][t-1]}if(t+1<this.x){if(this.generatedMap[i][t+1]==this.players[0].name||this.generatedMap[i][t+1]==this.players[1].name)continue;h=this.generatedMap[i][t+1]}if(s.toString().includes("ob")&&r.toString().includes("ob")&&o.toString().includes("ob")&&h.toString().includes("ob"))continue;this.generatedMap[i][t]=this.players[e].name,this.players[e].x=t,this.players[e].y=i,a=!0}}}},{key:"positionWeapon",value:function(){for(var e=this.weapons.length,a=0;a<e;a++)for(var t=!1;0==t;){var i=n(this.generatedMap.length),s=n(this.generatedMap.length);0==this.generatedMap[s][i]&&(this.generatedMap[s][i]=this.weapons[a].weapon,t=!0)}}},{key:"positionObstacle",value:function(){for(var e=0;e<this.y;e++)for(var a=n(.4*this.y),t=0;t<a;t++)for(var i=!1;0==i;){var s=n(this.obstacles.length),r=n(this.y);0==this.generatedMap[e][r]&&(this.generatedMap[e][r]=this.obstacles[s],i=!0)}}},{key:"generateMap",value:function(){this.createMatrix(),this.positionPlayer(),this.positionWeapon(),this.positionObstacle()}},{key:"createRowOnGrid",value:function(e,a){for(var t=this,i=$('<div id="row-'+[a]+'"class="map__row"></div>'),s=function(s){var n=$("<div></div>");n.addClass("case"),n.attr("id","case-"+[a]+[s]),e.append(i),i.append(n);var r="case__"+t.generatedMap[a][s];n.each((function(){$(this).addClass(r)}))},n=0;n<this.generatedMap[a].length;n++)s(n)}},{key:"visualizeMap",value:function(){for(var e=$(".map"),a=0;a<this.generatedMap.length;a++)this.createRowOnGrid(e,a)}}])&&r(a.prototype,t),e}(),h=["obstacle_one","obstacle_two","obstacle_three","obstacle_four"],l=["Crowbar","Gun","Ak-47","Gatling"];function p(e,a){for(var t=0;t<a.length;t++){var i=a[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}new(function(){function e(a,t){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e),this.activePlayer,this.players=[],this.listWeapons=[],this.map=new o(a,t,h,this.listWeapons,this.players[0],this.players),this.fight=new s,this.initWeapon(),this.initPlayer(),this.initMap(),this.movement(),this.turnPlayer(),this.toAttack(),this.toDefend()}var i,n;return i=e,(n=[{key:"initWeapon",value:function(){for(var e=0;e<l.length;e++){var a=new t("weapon_"+[e],parseInt(e+1+"0"),l[e]);this.listWeapons.push(a)}}},{key:"initPlayer",value:function(){for(var e=0;e<2;e++){var t=new a("player_"+[e]);t.username="Player "+(e+1),t.weapon.weapon=this.listWeapons[0].weapon,t.weapon.damage=this.listWeapons[0].damage,t.weapon.name=this.listWeapons[0].nameWeapon,this.players.push(t)}this.activePlayer=this.players[0]}},{key:"initMap",value:function(){this.map.generateMap(),this.map.visualizeMap();var e=this.getOpponent();this.activePlayer.startPosition=[this.activePlayer.y,this.activePlayer.x],this.activePlayer.updateSectionColorPlayer(e.name);var a=this.possiblesWays(this.activePlayer.y,this.activePlayer.x,this.activePlayer,this.getOpponent());this.activePlayer.showWaysToGo(a),this.initplayersStartInfos()}},{key:"initplayersStartInfos",value:function(){for(var e=0;e<this.players.length;e++)this.players[e].updateWeaponPlayerInfo(),this.players[e].updateHealthPlayerInfo(this.players[e])}},{key:"getOpponent",value:function(){return this.activePlayer.name===this.players[0].name?this.players[1]:this.players[0]}},{key:"switchPlayer",value:function(){this.activePlayer===this.players[0]?this.activePlayer=this.players[1]:this.activePlayer=this.players[0];var e=this.getOpponent(this.activePlayer);this.activePlayer.updateSectionColorPlayer(e.name)}},{key:"turnPlayer",value:function(){var e=this;$("#turn").on("click",(function(){$(".case__can_go").removeClass("case__can_go"),e.switchPlayer(),e.activePlayer.newTurn();var a=e.possiblesWays(e.activePlayer.y,e.activePlayer.x,e.activePlayer,e.getOpponent());e.activePlayer.showWaysToGo(a)}))}},{key:"toAttack",value:function(){var e=this;$("#attack").on("click",(function(){var a=e.getOpponent();1==e.players[0].onFight&&1==e.players[1].onFight&&(1==e.fight.toAttack(a,e.activePlayer.weapon.damage)?e.switchPlayer():e.endGame())}))}},{key:"endGame",value:function(){$("#game").empty(),$("#end-game").addClass("end-game--active"),$("#end-game").removeClass("end-game--hide"),$("#winner").text(this.activePlayer.username)}},{key:"toDefend",value:function(){var e=this;$("#to-defend").on("click",(function(){1==e.players[0].onFight&&1==e.players[1].onFight&&(e.fight.toBlockTheAttack(e.activePlayer),e.switchPlayer())}))}},{key:"modeFight",value:function(){this.fight.hideTurnButton(),this.fight.showAttackButton(),this.fight.showShieldButton(),this.activePlayer.removeLightUpTheWay()}},{key:"movement",value:function(){var e=this;document.addEventListener("keydown",(function(a){e.makeStep(a.key),1==e.players[0].onFight&&1==e.players[1].onFight&&e.modeFight()}))}},{key:"checkPosition",value:function(e){var a=this.activePlayer.startPosition,t=this.getNextPosition(e,this.activePlayer.x,this.activePlayer.y),i=t[2],s=t[1][0],n=t[1][1],r=a[0],o=a[1],l=parseInt(s)+""+parseInt(n),p=this.getOpponent(),c=this.possiblesWays(r,o);if(-1==$.inArray(i,h)){if(c.down.includes(l)||c.up.includes(l)||c.left.includes(l)||c.right.includes(l)){this.updatePosition(s,n,this.activePlayer),this.updateWeapon(i,t,this.activePlayer),this.activePlayer.updatePlayerPosition(t,e);var u=this.possiblesWays(r,o);this.activePlayer.showWaysToGo(u,e)}else console.error("ERROR: Impossible to go to this position");this.checkIfPlayerAdjecent(this.activePlayer.y,this.activePlayer.x,i,p,this.activePlayer)}else console.log("Case obstacle: ["+i+"]")}},{key:"possiblesWays",value:function(e,a){for(var t=!1,i=!1,s=!1,n=!1,r={down:[],up:[],left:[],right:[]},o=this.getOpponent(),l=1;l<4;l++)e+l<this.map.y&&-1==$.inArray(this.map.generatedMap[e+l][a],h)&&this.map.generatedMap[e+l][a]!==o&&0==t?this.activePlayer.previousMouvement.includes(parseInt(e+l)+""+parseInt(a))||r.down.push(parseInt(e+l)+""+parseInt(a)):t=!0,e-l>=0&&-1==$.inArray(this.map.generatedMap[e-l][a],h)&&this.map.generatedMap[e-l][a]!==o&&0==i?this.activePlayer.previousMouvement.includes(parseInt(e-l)+""+parseInt(a))||r.up.push(parseInt(e-l)+""+parseInt(a)):i=!0,a-l>=0&&-1==$.inArray(this.map.generatedMap[e][a-l],h)&&this.map.generatedMap[e][a-l]!==o&&0==s?this.activePlayer.previousMouvement.includes(parseInt(e)+""+parseInt(a-l))||r.left.push(parseInt(e)+""+parseInt(a-l)):s=!0,a+l<this.map.x&&-1==$.inArray(this.map.generatedMap[e][a+l],h)&&this.map.generatedMap[e][a+l]!==o&&0==n?this.activePlayer.previousMouvement.includes(parseInt(e)+""+parseInt(a+l))||r.right.push(parseInt(e)+""+parseInt(a+l)):n=!0;return r}},{key:"makeStep",value:function(e){if(0==this.activePlayer.onFight)switch(e){case"ArrowUp":this.activePlayer.y-1>=0?this.checkPosition("ArrowUp"):console.error("ERROR: Can't go outside the top border");break;case"ArrowDown":this.activePlayer.y+1<this.map.y?this.checkPosition("ArrowDown"):console.error("ERROR: Can't go outside the bottom border");break;case"ArrowLeft":this.activePlayer.x-1>=0?this.checkPosition("ArrowLeft"):console.error("ERROR: Can't go outside the left border");break;case"ArrowRight":this.activePlayer.x+1<this.map.x?this.checkPosition("ArrowRight"):console.error("ERROR: Can't go outside the right border")}}},{key:"checkIfPlayerAdjecent",value:function(e,a){var t=this,i=this.getOpponent();(e-1>=0&&t.map.generatedMap[e-1][a])!==i.name&&(e+1<t.map.y&&t.map.generatedMap[e+1][a])!==i.name&&(a-1>=0&&t.map.generatedMap[e][a-1])!==i.name&&(a+1<t.map.y&&t.map.generatedMap[e][a+1])!==i.name||(this.players[0].onFight=!0,this.players[1].onFight=!0)}},{key:"updatePosition",value:function(e,a){this.activePlayer.previousWeapon?(this.map.generatedMap[this.activePlayer.y][this.activePlayer.x]=this.activePlayer.previousWeapon,this.activePlayer.previousWeapon=null):this.map.generatedMap[this.activePlayer.y][this.activePlayer.x]=0,this.map.generatedMap[e][a]=this.activePlayer.name,this.activePlayer.previousPosition=parseInt(this.activePlayer.y)+""+parseInt(this.activePlayer.x),this.activePlayer.y=e,this.activePlayer.x=a,this.activePlayer.previousMouvement.push(parseInt(this.activePlayer.y)+""+parseInt(this.activePlayer.x))}},{key:"getNextPosition",value:function(e,a,t){var i,s=[t,a],n=[t,a,a];switch(e){case"ArrowUp":n[0]=t-1,i=this.map.generatedMap[n[0]][a];break;case"ArrowDown":n[0]=t+1,i=this.map.generatedMap[n[0]][a];break;case"ArrowLeft":n[1]=a-1,i=this.map.generatedMap[t][n[1]];break;case"ArrowRight":n[1]=a+1,i=this.map.generatedMap[t][n[1]]}return[s,n,i]}},{key:"updateWeapon",value:function(e,a){for(var t=l.length,i=0;i<t;i++)e==this.listWeapons[i].weapon&&(this.activePlayer.previousWeapon=this.activePlayer.weapon.weapon,this.activePlayer.weapon.weapon=this.listWeapons[i].weapon,this.activePlayer.weapon.name=this.listWeapons[i].nameWeapon,this.activePlayer.weapon.damage=this.listWeapons[i].damage,a.push(this.activePlayer.weapon,this.activePlayer.previousWeapon),this.updateVisualWeaponOnMap(a),this.activePlayer.updateWeaponPlayerInfo())}},{key:"updateVisualWeaponOnMap",value:function(e){var a=e[1][0]+""+e[1][1],t=e[3].weapon,i=e[4];$.ajax({success:function(){$("#case-"+a).removeClass("case case__"+t).addClass("case case__"+i)}})}}])&&p(i.prototype,n),e}())(10,10)})();