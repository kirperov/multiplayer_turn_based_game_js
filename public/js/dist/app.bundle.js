(()=>{"use strict";function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var t=function(){function t(e,a,i,s,o,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=e,this.y=a,this.obstacles=i,this.weapons=s,this.generatedMap=[],this.activePlayer=o,this.players=n,this.onFight=!1}var a,i;return a=t,(i=[{key:"createMatrix",value:function(){for(var e=0;e<this.y;e++){this.generatedMap[e]=[];for(var t=0;t<this.x;t++)this.generatedMap[e][t]=0}}},{key:"generateRandomNumber",value:function(e){if(-1!==Math.floor(Math.random()*e))return Math.floor(Math.random()*e)}},{key:"positionPlayer",value:function(){for(var e=0;e<this.players.length;e++)for(var t=!1;0==t;){var a=this.generateRandomNumber(this.generatedMap.length),i=this.generateRandomNumber(this.generatedMap.length);if(0==this.generatedMap[i][a]){var s="ob",o="ob",n="ob",r="ob";if(i-1>=0){if(this.generatedMap[i-1][a]==this.players[0].name||this.generatedMap[i-1][a]==this.players[1].name)continue;s=this.generatedMap[i-1][a]}if(i+1<this.y){if(this.generatedMap[i+1][a]==this.players[0].name||this.generatedMap[i+1][a]==this.players[1].name)continue;o=this.generatedMap[i+1][a]}if(a-1>=0){if(this.generatedMap[i][a-1]==this.players[0].name||this.generatedMap[i][a-1]==this.players[1].name)continue;n=this.generatedMap[i][a-1]}if(a+1<this.x){if(this.generatedMap[i][a+1]==this.players[0].name||this.generatedMap[i][a+1]==this.players[1].name)continue;r=this.generatedMap[i][a+1]}if(s.toString().includes("ob")&&o.toString().includes("ob")&&n.toString().includes("ob")&&r.toString().includes("ob"))continue;this.generatedMap[i][a]=this.players[e].name,this.players[e].x=a,this.players[e].y=i,t=!0}}}},{key:"positionWeapon",value:function(){for(var e=this.weapons.length,t=0;t<e;t++)for(var a=!1;0==a;){var i=this.generateRandomNumber(this.generatedMap.length),s=this.generateRandomNumber(this.generatedMap.length);0==this.generatedMap[s][i]&&(this.generatedMap[s][i]=this.weapons[t].weapon,a=!0)}}},{key:"positionObstacle",value:function(){for(var e=this.y,t=0;t<e;t++)for(var a=this.generateRandomNumber(.4*this.y),i=0;i<a;i++)for(var s=!1;0==s;){var o=this.generateRandomNumber(this.obstacles.length),n=this.generateRandomNumber(this.y);0==this.generatedMap[t][n]&&(this.generatedMap[t][n]=this.obstacles[o],s=!0)}}},{key:"generateMap",value:function(){this.createMatrix(),this.positionPlayer(),console.log("joueur positionné"),this.positionWeapon(),console.log("armes positionné"),this.positionObstacle(),console.log("obstacles positionné")}},{key:"getNextPosition",value:function(e){var t,a=[this.activePlayer.y,this.activePlayer.x],i=[this.activePlayer.y,this.activePlayer.x];switch(e){case"ArrowUp":i[0]=this.activePlayer.y-1,t=this.generatedMap[i[0]][this.activePlayer.x];break;case"ArrowDown":i[0]=this.activePlayer.y+1,t=this.generatedMap[i[0]][this.activePlayer.x];break;case"ArrowLeft":i[1]=this.activePlayer.x-1,t=this.generatedMap[this.activePlayer.y][i[1]];break;case"ArrowRight":i[1]=this.activePlayer.x+1,t=this.generatedMap[this.activePlayer.y][i[1]]}return[a,i,t]}},{key:"updatePosition",value:function(e,t){this.activePlayer.previousWeapon?(this.generatedMap[this.activePlayer.y][this.activePlayer.x]=this.activePlayer.previousWeapon,this.activePlayer.previousWeapon=null):this.generatedMap[this.activePlayer.y][this.activePlayer.x]=0,this.generatedMap[e][t]=this.activePlayer.name,this.activePlayer.previousPosition=parseInt(this.activePlayer.y)+""+parseInt(this.activePlayer.x),this.activePlayer.y=e,this.activePlayer.x=t,this.activePlayer.previousMouvement.push(parseInt(this.activePlayer.y)+""+parseInt(this.activePlayer.x))}},{key:"updateWeapon",value:function(e,t){for(var a=this.weapons.length,i=0;i<a;i++)e==this.weapons[i].weapon&&(this.activePlayer.previousWeapon=this.activePlayer.weapon.weapon,this.activePlayer.weapon=this.weapons[i],console.log("Case weapon: ["+e+"]"),t.push(this.activePlayer.weapon,this.activePlayer.previousWeapon),this.updateVisualWeaponOnMap(t))}},{key:"checkPosition",value:function(e,t){var a=this.activePlayer.previousPosition,i=this.getNextPosition(e,this.activePlayer.x,this.activePlayer.y),s=i[2],o=i[1][0],n=i[1][1],r=t[0],h=t[1],l=parseInt(o)+""+parseInt(n),c=this.activePlayer.y+""+this.activePlayer.x,p=this.possiblesWays(r,h);console.log("Start position: ["+r+"]"),console.log("New Position: ["+l+"]"),console.log("Previous Position: ["+a+"]"),console.log("CURRENT Position: ["+c+"]"),console.log("Previous mouvement "+this.activePlayer.previousMouvement),-1==$.inArray(s,this.obstacles)&&!0!==this.onFight?(p.down.includes(l)||p.up.includes(l)||p.left.includes(l)||p.right.includes(l)?(this.updatePosition(o,n),this.updateWeapon(s,i),this.updateVisualMap(i,this.activePlayer),this.showWaysToGo(p,c,e)):console.error("ERROR: Impossible to go to this position"),this.checkIfPlayerAdjecent(this.activePlayer.y,this.activePlayer.x,s)):(console.log("Case obstacle: ["+s+"]"),console.log("Combat: "+this.onFight))}},{key:"possiblesWays",value:function(e,t){for(var a=!1,i=!1,s=!1,o=!1,n={down:[],up:[],left:[],right:[]},r=1;r<4;r++)e+r<this.y&&-1==$.inArray(this.generatedMap[e+r][t],this.obstacles)&&0==a?this.activePlayer.previousMouvement.includes(parseInt(e+r)+""+parseInt(t))||n.down.push(parseInt(e+r)+""+parseInt(t)):a=!0,e-r>=0&&-1==$.inArray(this.generatedMap[e-r][t],this.obstacles)&&0==i?this.activePlayer.previousMouvement.includes(parseInt(e-r)+""+parseInt(t))||n.up.push(parseInt(e-r)+""+parseInt(t)):i=!0,t-r>=0&&-1==$.inArray(this.generatedMap[e][t-r],this.obstacles)&&0==s?this.activePlayer.previousMouvement.includes(parseInt(e)+""+parseInt(t-r))||n.left.push(parseInt(e)+""+parseInt(t-r)):s=!0,t+r<this.x&&-1==$.inArray(this.generatedMap[e][t+r],this.obstacles)&&0==o?this.activePlayer.previousMouvement.includes(parseInt(e)+""+parseInt(t+r))||n.right.push(parseInt(e)+""+parseInt(t+r)):o=!0;return n}},{key:"getOpponent",value:function(){return this.activePlayer.name===this.players[0].name?this.players[1].name:this.players[0].name}},{key:"checkIfPlayerAdjecent",value:function(e,t,a){var i=this,s=this.getOpponent();(e-1>=0&&i.generatedMap[e-1][t])!==s&&(e+1<i.y&&i.generatedMap[e+1][t])!==s&&(t-1>=0&&i.generatedMap[e][t-1])!==s&&(t+1<i.y&&i.generatedMap[e][t+1])!==s||(this.onFight=!0,console.log("Opponent: ["+a+"]")),console.log("Combat: "+this.onFight)}},{key:"switchPlayer",value:function(){this.activePlayer===this.players[0]?this.activePlayer=this.players[1]:this.activePlayer=this.players[0]}},{key:"toFight",value:function(){this.activePlayer===this.players[0]?this.activePlayer.toAttack(this.players[1]):this.activePlayer.toAttack(this.players[0])}},{key:"toBlockTheAttack",value:function(){this.activePlayer.toBlockTheAttack()}},{key:"makeStep",value:function(e,t){switch(e){case"ArrowUp":this.activePlayer.y-1>=0?this.checkPosition("ArrowUp",t):console.error("ERROR: Can't go outside the top border");break;case"ArrowDown":this.activePlayer.y+1<this.y?this.checkPosition("ArrowDown",t):console.error("ERROR: Can't go outside the bottom border");break;case"ArrowLeft":this.activePlayer.x-1>=0?this.checkPosition("ArrowLeft",t):console.error("ERROR: Can't go outside the left border");break;case"ArrowRight":this.activePlayer.x+1<this.x?this.checkPosition("ArrowRight",t):console.error("ERROR: Can't go outside the right border")}}},{key:"updateVisualMap",value:function(e){var t=this.activePlayer.name,a=e[0][0]+""+e[0][1],i=e[1][0]+""+e[1][1];$.ajax({success:function(){$("#case-"+i).addClass("case__"+t),$("#case-"+a).removeClass("case__"+t)}})}},{key:"updateVisualWeaponOnMap",value:function(e){var t=e[1][0]+""+e[1][1],a=e[3].weapon,i=e[4];console.log("Current weapon: ["+a+"]"),console.log("Previous weapon: ["+i+"]"),$.ajax({success:function(){$("#case-"+t).removeClass().addClass("case case__"+i)}})}},{key:"createRowOnGrid",value:function(e,t){for(var a=$('<div id="row-'+[t]+'"class="map__row"></div>'),i=0;i<this.generatedMap[t].length;i++){var s=$("<div></div>");s.addClass("case"),s.attr("id","case-"+[t]+[i]),s.text(this.generatedMap[t][i]),e.append(a),a.append(s),s.each((function(){var e="case__"+$(this).text();$(this).empty(),$(this).addClass(e)}))}}},{key:"lightUpTheWay",value:function(e,t){for(var a in e)console.log("Block "+a+" has value "+e[a]),$("#case-"+e[a]).addClass("case__can_go")}},{key:"showWaysToGo",value:function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;switch($(".case__can_go").removeClass("case__can_go"),a){case"ArrowUp":this.lightUpTheWay(e.up,t);break;case"ArrowDown":this.lightUpTheWay(e.down,t);break;case"ArrowLeft":this.lightUpTheWay(e.left,t);break;case"ArrowRight":this.lightUpTheWay(e.right,t);break;default:this.lightUpTheWay(e.up),this.lightUpTheWay(e.down),this.lightUpTheWay(e.left),this.lightUpTheWay(e.right)}}},{key:"visualizeMap",value:function(){for(var e=$(".map"),t=0;t<this.generatedMap.length;t++)this.createRowOnGrid(e,t)}}])&&e(a.prototype,i),t}();function a(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}for(var i=function(){function e(t,a,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.name=t,this.x=a,this.y=i,this.previousPosition,this.previousMouvement=[],this.previousWeapon,this.health=100,this.defense=!1,this.weapon={weapon:"weapon_0",dommage:10}}var t,i;return t=e,(i=[{key:"toAttack",value:function(e){var t=this.weapon.dommage;e.health>0&&(!0===e.defense&&(t-=50*t/100,e.defense=!1),e.health=e.health-t)}},{key:"toBlockTheAttack",value:function(){this.defense=!0}}])&&a(t.prototype,i),e}(),s=function e(t,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.weapon=t,this.dommage=a},o=[],n=[],r=0;r<4;r++){var h=new s("weapon_"+[r],parseInt(r+1+"0"));n.push(h)}for(var l=0;l<2;l++){var c=new i("player_"+[l]);c.weapon=n[0],o.push(c),console.log(c.weapon)}console.log(o);var p=new t(10,10,["obstacle_one","obstacle_two","obstacle_three","obstacle_four"],n,o[0],o);p.generateMap(),p.visualizeMap();var y=[p.activePlayer.y,p.activePlayer.x];p.showWaysToGo(p.possiblesWays(y[0],y[1])),$("#turn").on("click",(function(){$(".case__can_go").removeClass("case__can_go"),p.switchPlayer(),p.showWaysToGo(p.possiblesWays(p.activePlayer.y,p.activePlayer.x)),y=[p.activePlayer.y,p.activePlayer.x],p.activePlayer.previousPosition=null,p.activePlayer.previousMouvement=[],console.log(p.generatedMap)})),$("#attack").on("click",(function(){p.toFight(),console.log(o)})),$("#to-defend").on("click",(function(){p.toBlockTheAttack(),console.log(o)})),document.addEventListener("keydown",(function(e){p.makeStep(e.key,y),console.log(p.activePlayer),e.repeat?console.log('Key "'.concat(e.key,'" repeating  [event: keydown]')):console.log('Key "'.concat(e.key,'" pressed  [event: keydown]'))}))})();